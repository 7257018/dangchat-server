actor-persist\src\main\scala\im\actor\server\persist\configs\ParameterRepo.scala

  //二次开发修改的方法	by Lining
  def findPeerNotifications(userId: Int, deviceType: String)(implicit ec: ExecutionContext): DBIO[Seq[(Peer, Boolean)]] = {
    def boolValue(value: Option[String]) = value match {
      case Some("false") ⇒ false
      case _             ⇒ true
    }

    val prefix = s"category.$deviceType.notification.chat."

    for (rows ← byUserIdAndKeyLikeC((userId, s"$prefix%_%.%")).result) yield {
      rows flatMap {
        case Parameter(_, key, value) ⇒
          key.drop(prefix.length).split("\\.").toList match {
            case peerStr :: "enabled" :: Nil ⇒
              peerStr.split("_").toList match {
		//处理未捕捉的异常
                case "GROUP" :: id :: Nil ⇒
                  try {
                    Some((Peer(PeerType.Group, id.toInt), boolValue(value)))
                  } catch {
                    case ex: Exception ⇒ {
                      None
                    }
                  }
                case "PRIVATE" :: id :: Nil ⇒
                  try {
                    Some((Peer(PeerType.Private, id.toInt), boolValue(value)))
                  } catch {
                    case ex: Exception ⇒ {
                      None
                    }
                  }
                case _ ⇒ None
              }
            case _ ⇒ None
          }
      }
    }
  }