// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package im.actor.server.model.push



@SerialVersionUID(0L)
final case class GooglePushCredentials(
    authId: Long = 0L,
    projectId: Long = 0L,
    regId: String = ""
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[GooglePushCredentials] with com.trueaccord.lenses.Updatable[GooglePushCredentials] with im.actor.server.model.push.PushCredentials {
    @transient
    lazy val serializedSize: Int = {
      var __size = 0
      if (authId != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(1, authId) }
      if (projectId != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, projectId) }
      if (regId != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(3, regId) }
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = authId
        if (__v != 0L) {
          output.writeInt64(1, __v)
        }
      };
      {
        val __v = projectId
        if (__v != 0L) {
          output.writeInt64(2, __v)
        }
      };
      {
        val __v = regId
        if (__v != "") {
          output.writeString(3, __v)
        }
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): im.actor.server.model.push.GooglePushCredentials = {
      var __authId = this.authId
      var __projectId = this.projectId
      var __regId = this.regId
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __authId = __input.readInt64()
          case 16 =>
            __projectId = __input.readInt64()
          case 26 =>
            __regId = __input.readString()
          case tag => __input.skipField(tag)
        }
      }
      im.actor.server.model.push.GooglePushCredentials(
          authId = __authId,
          projectId = __projectId,
          regId = __regId
      )
    }
    def withAuthId(__v: Long): GooglePushCredentials = copy(authId = __v)
    def withProjectId(__v: Long): GooglePushCredentials = copy(projectId = __v)
    def withRegId(__v: String): GooglePushCredentials = copy(regId = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = authId
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = projectId
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = regId
          if (__t != "") __t else null
        }
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = im.actor.server.model.push.GooglePushCredentials
}

object GooglePushCredentials extends com.trueaccord.scalapb.GeneratedMessageCompanion[GooglePushCredentials]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[GooglePushCredentials]  = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): im.actor.server.model.push.GooglePushCredentials = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    im.actor.server.model.push.GooglePushCredentials(
      __fieldsMap.getOrElse(__fields.get(0), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(1), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = ModelPushProto.descriptor.getMessageTypes.get(0)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = im.actor.server.model.push.GooglePushCredentials(
  )
  implicit class GooglePushCredentialsLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, GooglePushCredentials]) extends com.trueaccord.lenses.ObjectLens[UpperPB, GooglePushCredentials](_l) {
    def authId: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.authId)((c_, f_) => c_.copy(authId = f_))
    def projectId: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.projectId)((c_, f_) => c_.copy(projectId = f_))
    def regId: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.regId)((c_, f_) => c_.copy(regId = f_))
  }
  final val AUTH_ID_FIELD_NUMBER = 1
  final val PROJECT_ID_FIELD_NUMBER = 2
  final val REG_ID_FIELD_NUMBER = 3
}
