// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package im.actor.server.model.push



@SerialVersionUID(0L)
final case class ApplePushCredentials(
    authId: Long = 0L,
    apnsKey: Option[com.google.protobuf.wrappers.Int32Value] = None,
    token: com.google.protobuf.ByteString = com.google.protobuf.ByteString.EMPTY,
    isVoip: Boolean = false,
    bundleId: Option[com.google.protobuf.wrappers.StringValue] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ApplePushCredentials] with com.trueaccord.lenses.Updatable[ApplePushCredentials] with im.actor.server.model.push.PushCredentials {
    @transient
    lazy val serializedSize: Int = {
      var __size = 0
      if (authId != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(1, authId) }
      if (apnsKey.isDefined) { __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(apnsKey.get.serializedSize) + apnsKey.get.serializedSize }
      if (token != com.google.protobuf.ByteString.EMPTY) { __size += com.google.protobuf.CodedOutputStream.computeBytesSize(3, token) }
      if (isVoip != false) { __size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, isVoip) }
      if (bundleId.isDefined) { __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(bundleId.get.serializedSize) + bundleId.get.serializedSize }
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = authId
        if (__v != 0L) {
          output.writeInt64(1, __v)
        }
      };
      apnsKey.foreach { __v => 
        output.writeTag(2, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      {
        val __v = token
        if (__v != com.google.protobuf.ByteString.EMPTY) {
          output.writeBytes(3, __v)
        }
      };
      {
        val __v = isVoip
        if (__v != false) {
          output.writeBool(4, __v)
        }
      };
      bundleId.foreach { __v => 
        output.writeTag(5, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): im.actor.server.model.push.ApplePushCredentials = {
      var __authId = this.authId
      var __apnsKey = this.apnsKey
      var __token = this.token
      var __isVoip = this.isVoip
      var __bundleId = this.bundleId
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __authId = __input.readInt64()
          case 18 =>
            __apnsKey = Some(com.trueaccord.scalapb.LiteParser.readMessage(__input, __apnsKey.getOrElse(com.google.protobuf.wrappers.Int32Value.defaultInstance)))
          case 26 =>
            __token = __input.readBytes()
          case 32 =>
            __isVoip = __input.readBool()
          case 42 =>
            __bundleId = Some(com.trueaccord.scalapb.LiteParser.readMessage(__input, __bundleId.getOrElse(com.google.protobuf.wrappers.StringValue.defaultInstance)))
          case tag => __input.skipField(tag)
        }
      }
      im.actor.server.model.push.ApplePushCredentials(
          authId = __authId,
          apnsKey = __apnsKey,
          token = __token,
          isVoip = __isVoip,
          bundleId = __bundleId
      )
    }
    def withAuthId(__v: Long): ApplePushCredentials = copy(authId = __v)
    def getApnsKey: com.google.protobuf.wrappers.Int32Value = apnsKey.getOrElse(com.google.protobuf.wrappers.Int32Value.defaultInstance)
    def clearApnsKey: ApplePushCredentials = copy(apnsKey = None)
    def withApnsKey(__v: com.google.protobuf.wrappers.Int32Value): ApplePushCredentials = copy(apnsKey = Some(__v))
    def withToken(__v: com.google.protobuf.ByteString): ApplePushCredentials = copy(token = __v)
    def withIsVoip(__v: Boolean): ApplePushCredentials = copy(isVoip = __v)
    def getBundleId: com.google.protobuf.wrappers.StringValue = bundleId.getOrElse(com.google.protobuf.wrappers.StringValue.defaultInstance)
    def clearBundleId: ApplePushCredentials = copy(bundleId = None)
    def withBundleId(__v: com.google.protobuf.wrappers.StringValue): ApplePushCredentials = copy(bundleId = Some(__v))
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = authId
          if (__t != 0L) __t else null
        }
        case 2 => apnsKey.getOrElse(null)
        case 3 => {
          val __t = token
          if (__t != com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 4 => {
          val __t = isVoip
          if (__t != false) __t else null
        }
        case 5 => bundleId.getOrElse(null)
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = im.actor.server.model.push.ApplePushCredentials
}

object ApplePushCredentials extends com.trueaccord.scalapb.GeneratedMessageCompanion[ApplePushCredentials]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[ApplePushCredentials]  = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): im.actor.server.model.push.ApplePushCredentials = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    im.actor.server.model.push.ApplePushCredentials(
      __fieldsMap.getOrElse(__fields.get(0), 0L).asInstanceOf[Long],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[Option[com.google.protobuf.wrappers.Int32Value]],
      __fieldsMap.getOrElse(__fields.get(2), com.google.protobuf.ByteString.EMPTY).asInstanceOf[com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(3), false).asInstanceOf[Boolean],
      __fieldsMap.get(__fields.get(4)).asInstanceOf[Option[com.google.protobuf.wrappers.StringValue]]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = ModelPushProto.descriptor.getMessageTypes.get(1)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    var __out: com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    __field.getNumber match {
      case 2 => __out = com.google.protobuf.wrappers.Int32Value
      case 5 => __out = com.google.protobuf.wrappers.StringValue
    }
  __out
  }
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = im.actor.server.model.push.ApplePushCredentials(
  )
  implicit class ApplePushCredentialsLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, ApplePushCredentials]) extends com.trueaccord.lenses.ObjectLens[UpperPB, ApplePushCredentials](_l) {
    def authId: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.authId)((c_, f_) => c_.copy(authId = f_))
    def apnsKey: com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.wrappers.Int32Value] = field(_.getApnsKey)((c_, f_) => c_.copy(apnsKey = Some(f_)))
    def optionalApnsKey: com.trueaccord.lenses.Lens[UpperPB, Option[com.google.protobuf.wrappers.Int32Value]] = field(_.apnsKey)((c_, f_) => c_.copy(apnsKey = f_))
    def token: com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.ByteString] = field(_.token)((c_, f_) => c_.copy(token = f_))
    def isVoip: com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.isVoip)((c_, f_) => c_.copy(isVoip = f_))
    def bundleId: com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.wrappers.StringValue] = field(_.getBundleId)((c_, f_) => c_.copy(bundleId = Some(f_)))
    def optionalBundleId: com.trueaccord.lenses.Lens[UpperPB, Option[com.google.protobuf.wrappers.StringValue]] = field(_.bundleId)((c_, f_) => c_.copy(bundleId = f_))
  }
  final val AUTH_ID_FIELD_NUMBER = 1
  final val APNS_KEY_FIELD_NUMBER = 2
  final val TOKEN_FIELD_NUMBER = 3
  final val IS_VOIP_FIELD_NUMBER = 4
  final val BUNDLE_ID_FIELD_NUMBER = 5
}
