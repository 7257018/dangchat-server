// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package im.actor.server.session


import im.actor.server.api.TypeMappers._
import scala.collection.JavaConversions._

@SerialVersionUID(0L)
final case class HandleMessageBox(
    messageBoxBytes: com.google.protobuf.ByteString = com.google.protobuf.ByteString.EMPTY,
    remoteAddr: Option[java.net.InetAddress] = None
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[HandleMessageBox] with com.trueaccord.lenses.Updatable[HandleMessageBox] with im.actor.server.session.SessionMessage {
    @transient
    lazy val serializedSize: Int = {
      var __size = 0
      __size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, messageBoxBytes)
      if (remoteAddr.isDefined) { __size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, im.actor.server.session.HandleMessageBox._typemapper_remoteAddr.toBase(remoteAddr.get)) }
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      output.writeBytes(1, messageBoxBytes)
      remoteAddr.foreach { __v => 
        output.writeBytes(2, im.actor.server.session.HandleMessageBox._typemapper_remoteAddr.toBase(__v))
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): im.actor.server.session.HandleMessageBox = {
      var __messageBoxBytes = this.messageBoxBytes
      var __remoteAddr = this.remoteAddr
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __messageBoxBytes = __input.readBytes()
          case 18 =>
            __remoteAddr = Some(im.actor.server.session.HandleMessageBox._typemapper_remoteAddr.toCustom(__input.readBytes()))
          case tag => __input.skipField(tag)
        }
      }
      im.actor.server.session.HandleMessageBox(
          messageBoxBytes = __messageBoxBytes,
          remoteAddr = __remoteAddr
      )
    }
    def withMessageBoxBytes(__v: com.google.protobuf.ByteString): HandleMessageBox = copy(messageBoxBytes = __v)
    def getRemoteAddr: java.net.InetAddress = remoteAddr.getOrElse(im.actor.server.session.HandleMessageBox._typemapper_remoteAddr.toCustom(com.google.protobuf.ByteString.EMPTY))
    def clearRemoteAddr: HandleMessageBox = copy(remoteAddr = None)
    def withRemoteAddr(__v: java.net.InetAddress): HandleMessageBox = copy(remoteAddr = Some(__v))
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => messageBoxBytes
        case 2 => remoteAddr.map(im.actor.server.session.HandleMessageBox._typemapper_remoteAddr.toBase(_)).getOrElse(null)
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = im.actor.server.session.HandleMessageBox
}

object HandleMessageBox extends com.trueaccord.scalapb.GeneratedMessageCompanion[HandleMessageBox]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[HandleMessageBox]  = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): im.actor.server.session.HandleMessageBox = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    im.actor.server.session.HandleMessageBox(
      __fieldsMap(__fields.get(0)).asInstanceOf[com.google.protobuf.ByteString],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[Option[com.google.protobuf.ByteString]].map(im.actor.server.session.HandleMessageBox._typemapper_remoteAddr.toCustom(_))
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = SessionProto.descriptor.getMessageTypes.get(1)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = im.actor.server.session.HandleMessageBox(
    messageBoxBytes = com.google.protobuf.ByteString.EMPTY
  )
  implicit class HandleMessageBoxLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, HandleMessageBox]) extends com.trueaccord.lenses.ObjectLens[UpperPB, HandleMessageBox](_l) {
    def messageBoxBytes: com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.ByteString] = field(_.messageBoxBytes)((c_, f_) => c_.copy(messageBoxBytes = f_))
    def remoteAddr: com.trueaccord.lenses.Lens[UpperPB, java.net.InetAddress] = field(_.getRemoteAddr)((c_, f_) => c_.copy(remoteAddr = Some(f_)))
    def optionalRemoteAddr: com.trueaccord.lenses.Lens[UpperPB, Option[java.net.InetAddress]] = field(_.remoteAddr)((c_, f_) => c_.copy(remoteAddr = f_))
  }
  final val MESSAGE_BOX_BYTES_FIELD_NUMBER = 1
  final val REMOTE_ADDR_FIELD_NUMBER = 2
  private val _typemapper_remoteAddr: com.trueaccord.scalapb.TypeMapper[com.google.protobuf.ByteString, java.net.InetAddress] = implicitly[com.trueaccord.scalapb.TypeMapper[com.google.protobuf.ByteString, java.net.InetAddress]]
}
